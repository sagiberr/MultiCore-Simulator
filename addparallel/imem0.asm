    add $r2, $imm, $zero ,0     # PC=0, Base address for the first memory block (offset 0)
    add $r3, $imm, $zero, 0     # PC=1, Initialize registers for loading values from memory
    add $r4, $imm, $zero, 0     # PC=2
    add $r5, $imm, $zero, 0     # PC=3
    add $r6, $imm, $zero, 0     # PC=4, End of initialization
    add $r7, $imm, $zero ,0     # PC=5, Registers for second memory block values
    add $r8, $imm, $zero ,0     # PC=6
    add $r9, $imm, $zero ,0     # PC=7
    add $r10, $imm, $zero ,0    # PC=8
    add $r11, $imm, $zero ,255  # PC=9, Loop counter (255 iterations)
    add $r12, $imm, $zero, 1    # PC=10, Load 1 into $r12
    sll $r12, $r12, $imm, 12    # PC=11, Shift left by 12 (4096: base of second memory block)
    add $r13, $r12, $r12, 0     # PC=12, Copy $r12 to $r13 (base of result storage = 8192)
    add $r14, $imm, $zero, 0    # PC=13, Initialize loop counter
loop1:          
    lw $r3, $r2 ,$imm, 0        # PC=14, Load first memory block values
    lw $r4, $r2 ,$imm, 1        # PC=15
    lw $r5, $r2 ,$imm, 2        # PC=16
    lw $r6, $r2 ,$imm, 3        # PC=17
    lw $r7, $r12 ,$imm, 0       # PC=18, Load second memory block values
    lw $r8, $r12 ,$imm, 1       # PC=19
    lw $r9, $r12 ,$imm, 2       # PC=20
    lw $r10, $r12 ,$imm, 3      # PC=21
    add $r3, $r3 ,$r7 , 0       # PC=22, Add corresponding values
    add $r4, $r4 ,$r8 , 0       # PC=23
    add $r5, $r5 ,$r9 , 0       # PC=24
    add $r6, $r6 ,$r10 , 0      # PC=25
    sw $r3, $r13, $imm, 0       # PC=26, Store results in memory
    sw $r4, $r13, $imm, 1       # PC=27
    sw $r5, $r13, $imm, 2       # PC=28
    sw $r6, $r13, $imm, 3       # PC=29
    lw $r3, $r12 ,$imm, 0       # PC=30, Load next block from second memory
    add $r2, $r2 ,$imm, 4       # PC=31, Increment memory addresses for next iteration
    add $r12, $r12 ,$imm, 4     # PC=32
    add $r13, $r13 ,$imm, 4     # PC=33
    blt $imm, $r14, $r11, loop1 # PC=34, Loop until counter reaches 255
    add $r14, $r14 ,$imm, 1     # PC=35, Increment loop counter
    halt $zero, $zero, $zero, 0 # PC=36 Halt execution
    halt $zero, $zero, $zero, 0 # PC=37
    halt $zero, $zero, $zero, 0 # PC=38
    halt $zero, $zero, $zero, 0 # PC=39
    halt $zero, $zero, $zero, 0 # PC=40, Finish.